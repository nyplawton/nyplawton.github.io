/* Font Use */
/*
    name: Gyosho
    link: https://www.dafont.com/gyosho.font

    main: "main", cursive, "Comic Sans MS", sans-serif
    body: font-family: 'Monaco', Arial, Helvetica, sans-serif;
*/

/********************************
/* Color Use */
/*
    Highlight: #ffa600 Gold
    Focus:     ##e00c41 Red
    Main:      #fffef6 White

    Focus Shading: #b90935 Dark Red
    Focus blend  : #e00c4183 Half transparent Red
*/

/*************************************
    Z-index: max is set to 9 (e.g. overlay)

*/



/********************************
/* Font Importation */
@font-face {
    font-family: 'main';
    src: url(fonts/Gyosho.ttf) format('truetype');
}

* {
    box-sizing: border-box;
}

/* Remove margin and padding for every element in the body
   And set the default font family to Monaco
*/
body {
    background-color: #f6f6f4;
    margin: 0%;
    padding: 0%;

    font-family: 'Monaco', Arial, Helvetica, sans-serif;
    font-size: 1.5vw;
}

/* Make h2 element to have highlight color - gold and set font to main */
h2 {
    font-family: "main", cursive, "Comic Sans MS", sans-serif;
    font-size: 5vw;
    color: #FFA600;
}

/* Make h3 element to have focus color - red */
h3{
    font-size: 3vw;
    color: #e00c41;
}

/* Make every image to cover the entire parents size and add rounded corner */
img {
    height: 100%;
    width: 100%;

    border-radius: 0.5em;
}

/* Apply italic and less saturated color to the citation */
figcaption {
    font-size: 0.5em;
    color: rgba(0, 0, 0, 0.500);
    font-style: italic;
}

/* Add one character spacing between each li in ul */
ul li, ol li{
    margin-top: 1em;
}

/* Base styling for button:
    1. Highlight color - gold solid border
    2. Focus color - red background color
    3. Main color - white font color 

    Ensure a minimum interaction area of 48px
*/
button {
    background-color: #e00c41;

    padding: 1.5vh;
    border: 2px solid #FFA600;
    border-radius: 2em;

    color: #FFA600;
    font-weight: bold;
    font-size: 1.3vw;
    font-family: 'Monaco', Arial, Helvetica, sans-serif;

    transition: background-color 0.2s,
                border 0.2s;
}

/* Change link color to focus color - red */
a{
    color: #e00c41;
    text-decoration: none;
}
/* Change link color when hovering, to focus shading color - dark red */
a:hover{
    color: #b90935;
}
/* Change the checked color to highlight color - gold and mouse cursor to pointer (finger shape) */
input[type = "checkbox"]{
    accent-color: #FFA600;
    cursor: pointer;
}

/* Desktop Only Styling */
@media (min-width: 801px){

    /* Allow hover for desktop view only */
    button:hover{
        background-color: #b90935;
        border: 2px dashed #FFA600;
    }
}

/* Mobile Only Styling */
@media (max-width: 800px){
    /* Maintain a readable font size */
    body{
        font-size: 12px;
    }
    /* Ensure minimum interaction space for interactable item */
    button, input[type = "checkbox"]{
        min-height: 48px;
        min-width: 48px;
    }

    /* Reduce the padding of the button to make the text appear better */
    button{
        padding: 1.5vw;
        font-size: 3vw;
    }

}
/********************************
/* Shared Styling */

/* Empty Heading styling, to avoid taking any space */
.empty-display {
    display: none;
}

/* Copy of button styling, to allow for covering button with <a> */
.button {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    background-color: #e00c41;

    padding: 1.5vh;
    border: 2px solid #FFA600;
    border-radius: 2em;

    color: #FFA600;
    font-weight: bold;
    font-size: 1.3vw;
    font-family: 'Monaco', Arial, Helvetica, sans-serif;

    transition: background-color 0.2s,
                border 0.2s;
}

/* Flex container for both horizontal and vertical alignment */
.flex-container--horizontal {
    display: flex;
    flex-direction: row;

    width: 100%;
    justify-content: space-evenly;
    align-items: center;
}

.flex-container--vertical {
    display: flex;
    flex-direction: column;

    height: 100%;
    justify-content: center;
    align-items: center;
}

/* Repeat the background image - red_background.jpg */
.background--repeat{
    background-image: url(images/red_background.jpg);
    background-repeat: repeat;
}

/* Rounded corner main color - white background */
.background--white{
    background-color: #fffef6;

    width: 100%;
    padding: 2em;
    border-radius: 0.5em;
}
/* Remove margin-top for every body text */
.background--white h2, .background--white h3, .background--white p{
    margin-top: 0;
}

/* Make the element an overlay by using position: fixed and align element to center by using flex */
.overlay{
    position: fixed;
    top: 0;

    display: flex;
    justify-content: center;
    align-items: center;

    z-index: 9;
}

/* Set overflow to hidden to prevent scrolling */
.no--scrolling{
    overflow: hidden;
}

/* Base styling for cancel button:
    1. Background color: main color - white
    2. Text color      : focus color - red
    3. Border color    : focus color - red solid
    4. In circle shape
*/
.button--cancel{
    width: 3vw;
    height: 3vw;

    background-color: #fffef6;
    font-size: 2vw;
    color: #e00c41;
    text-align: center;

    border: 4px solid #e00c41;
    border-radius: 50%;
    padding: 0.2vh;
    
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Card Layout Grid container, works together with:
    1. layout--card--top-left
    2. layout--card--top-right
    3. layout--card--bot-left
    4. layout--card--bot-right

    To align layout--card at different corner in the grid
*/
.layout--card--grid-container{
    display: grid;
    grid-template-columns: repeat(9, 11%);
    grid-template-rows: repeat(2, 1fr);

    margin-top: 5vh;
}
.layout--card--top-left{
    grid-column: 2 / 5;
    grid-row: 1 / 2;
}
.layout--card--top-right{
    grid-column: 6 / 9;
    grid-row: 1 / 2;
}
.layout--card--bot-left{
    grid-column: 2 / 5;
    grid-row: 2 / 3;
}
.layout--card--bot-right{
    grid-column: 6 / 9;
    grid-row: 2 / 3;
}
/* Card Layout
    required the following in body:
        1. img  - for image
        2. h4 - for title
        
    optional for hover:
        1. hover--circle-text
            - To add a circle border to the child text with this tag
*/
/* Flex container, align item to center axis */
.layout--card{
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    position: relative;

    margin-top: 2em;
}
/* Add rounded border to img */
.layout--card img{
    border-radius: 0.5em;    
    transition: border-radius 0.5s;
}
/* Margin-top after the img */
.layout--card h4{
    margin: 0.5em 0 0 0;
    font-size: 2vw;
}
/* Add a circle border around the text to make it cover the hovered img and Hide the hover element */
.layout--card .hover--circle-text{
    background-color: #e00c418c;

    font-weight: bold;
    color: #FFA600;

    border: 8px dashed #FFA600;

    position: absolute; /* To align tgt with the img */

    opacity: 0%;
    transition: opacity 0.5s,
                border-radius 0.5s;
}

/* Content layout, required the following child structure in html:
    -- .layout--content--grid-container >> Content background and grid container
    ---- .button--cancel >> Button to close the content
    ---- figure >> content image holder (not scrollable)
    ------ img  >> content image
    ---- div    >> content holder (scrollable)
*/

/* Applly an overlay background to cover the whole screen */
.layout--content{
    left: 0; /* Works with .overlay, to align content to top-left corner */

    background-color: #00000050;
    width: 100vw;
    height: 100vh;
}
/* Grid container */
.layout--content .layout--content--grid-container{
    display: grid;
    grid-template-rows: repeat(5, 1fr);
    grid-gap: 1em;
    
    position: relative;

    height: 90vh;
    width: 45vw;
    padding: 2em;
}
/* Align the cancel button to the top right corner of the content background */
.layout--content--grid-container .button--cancel{
    position: absolute;
    top: 2vh;
    right: 2vh;
}
/* Take 1 grid row to put img, align image to center by using flex */
.layout--content--grid-container figure{
    grid-row: 1 / 3;

    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}
/* Align image to the top, and resize to cover the area while keeping the aspect ratio of the image */
.layout--content--grid-container figure img{
    object-fit: contain;
}
/* Take 2 grid row to hold content, text are clipped and scrollable */
.layout--content--grid-container div{
    grid-row: 3 / 6;
    overflow-y: auto;

    padding: 0 1vw;
}

/* Set the background image and make it repeated, and provide a padding for the child content */
.m{
    width: 100%;

    margin: 0%;
    padding: 0vh 5vw 5vh 5vw;
}
/* Add in invisible border for title, to create 5vh of gap between the edge and body content */
.m h2{
    margin: 0;
    border-top: #00000000 solid 5vh;
    border-bottom: #00000000 solid 5vh;
}

/* To cover the content underneath (100% width * 10%), with z-index set to 3 and color set to main color - white */
.cover--horizontal--white{
    background-color: #fffef6;
    width: 100%;
    height: 5em;

    position: relative;
    z-index: 3;
}

/* Hoverable Sub Topic Navigator */

/* Parents container for hoverable, prevent the child object from rendering out of the box during the animation */
.hover--sub-topic-navigator{
    overflow: hidden;
    position: relative;
}
/* Hide the title on default by setting opacity to 0, transition will starts after a delay of 0.5s to make sure the img is faded first */
.hover--sub-topic-navigator--title{
    opacity: 0;
    position: absolute;
    text-align: center;
    transition: opacity 0.5s ease-in-out 0.5s;
}
/* Allow for transition */
.hover--sub-topic-navigator--img{
    transition: transform 1.0s,
                opacity 0.5s;
}

/* Hover to show the sub-topic description */

/* Provide position: relative to the description parent */
.hover--sub-topic-description{
    position: relative;
}

/* Hide the sub-topic description while not hovering */
.hover--sub-topic-description--details{
    position: absolute;
    left: 100%;
    z-index: 1;
    pointer-events: none; /* Prevent the text from blocking the hovering event of other element */
    
    width: 0;
    height: 100vh;
    padding: 10vw;
    text-align: center;

    background-color: #e00c41;
    opacity: 0;

    transition: width 0.5s 0.2s,
                opacity 0.2s;
}
/* Fade in the header after the description details background has fully shown */
.hover--sub-topic-description--details h2{
    opacity: 0;
    transition: opacity 0.5s 0.7s;
}
/* Fade in the text after the description details background has fully shown */
.hover--sub-topic-description--details p{
    opacity: 0;
    transition: opacity 0.5s 0.7s;
}

/* Desktop Only Styling */
@media (min-width: 801px){
    /* Allow hover for desktop view only */
    .button:hover{
        background-color: #b90935;
        border: 2px dashed #FFA600;
    }

    /* Class to hide element when in desktop resolution */
    .desktop--hide{
        display: none;
    }

    /* Display the details when hovering over the description button */
    .hover--sub-topic-description:hover .hover--sub-topic-description--details{
        width: 66vw;
        opacity: 100%;
    }
    /* Fade in the header when hovering over the description button */
    .hover--sub-topic-description:hover .hover--sub-topic-description--details h2{
        opacity: 100%;
    }
    /* Fade in the header when hovering over the description button */
    .hover--sub-topic-description:hover .hover--sub-topic-description--details p{
        opacity: 100%;
    }

    /* Hoverable Sub Topic Navigator hover effect */
    /* Fade in the text after a 0.5s of delay */
    .hover--sub-topic-navigator:hover .hover--sub-topic-navigator--title{
        opacity: 100%;
    }
    .hover--sub-topic-navigator:hover .hover--sub-topic-navigator--img{
        transform: translateY(80%);
        opacity: 50%;
    }

    /* Call for transition */
    .hover--background--red{
        border: 4px solid #fffef6;
        transition: background-color 0.2s,
                    color 0.2s,
                    border 0.2s;
    }
    /* While hovering, change background color to Focus color red, dashed highlight color gold, text color to msain color white */
    .hover--background--red:hover {
        background-color: #e00c41;
        color: #fffef6;
        border: 4px dashed #FFA600;
    }

    /* Hover Effect */
    /* Make image to have circle border */
    .layout--card:hover img{
        border-radius: 50%;
    }
    /* Fade in circle text by controlling the opacity and round the border to circle */
    .layout--card:hover .hover--circle-text{
        opacity: 100%;
        border-radius: 50%;
    }

    /* Ensure the border of cancel button have the same priority as other classes that changes border propertiues */
    .button--cancel{
        border: 4px solid #e00c41;
    }
}

/* Mobile Only Styling */
@media (max-width: 800px){

    /* Allow minimum interaction area */
        /* Ensure minimum interaction space for interactable item */
    .button{
        min-height: 48px;
        min-width: 48px;
    }

    /* Reduce the padding of the button to make the text appear better */
    .button{
        padding: 1.5vw;
        font-size: 3vw;
    }

    /* Class to hide element when in mobile resolution */
    .mobile--hide{
        display: none;
    }

    /* Scale up the img container to scale up the image */
    .hover--sub-topic-navigator figure, .hover--sub-topic-description figure{
        height: 20vh;
        width: 90%;

        margin: 0.5em;
    }

    /* Show the hover effect without hovering them to show the title */
    .hover--sub-topic-navigator--title{
        opacity: 100%;
    }
    .hover--sub-topic-navigator--img{
        object-fit: scale-down;
        transform: translateY(80%);
        opacity: 80%;
    }

    /* Scale down to fit into the container */
    .hover--sub-topic-description img{
        object-fit: scale-down;
    }

    /* Resize to fit in mobile view */
    .hover--sub-topic-description--details{
        height: 50vh;
        padding: 10vw;
        color: #fffef6;
    }

    /* Update transition delay as there is no transition for "hover" now */
    .hover--sub-topic-description--details{
        transition: width 0.5s,
                    opacity 0.2s;
    }
    .hover--sub-topic-description--details h2{
        transition: opacity 0.5s 0.5s;
    }
    .hover--sub-topic-description--details p{
        transition: opacity 0.5s 0.5s;
    }

    /* Click to toggle the description */
    .hover--sub-topic-description.click .hover--sub-topic-description--details{
        width: 65vw;
        opacity: 100%;
    }
    .hover--sub-topic-description.click .hover--sub-topic-description--details h2{
        opacity: 100%;
    }
    .hover--sub-topic-description.click .hover--sub-topic-description--details p{
        opacity: 100%;
    }

    /* Ensure the X can cover the button */
    .button--cancel{
        font-size: 2em;
    }

    /* Change the layout to allow only 1 box per row */
    .layout--card--grid-container{
        display: grid;
        grid-template-columns: repeat(1, 100%);
        grid-template-rows: repeat(4, 1fr);

        grid-gap: 1em;
        padding: 0 10%;
    }
    .layout--card--top-left{
        grid-column: 1 / 2;
        grid-row: 1 / 2;
    }
    .layout--card--top-right{
        grid-column: 1 / 2;
        grid-row: 2 / 3;
    }
    .layout--card--bot-left{
        grid-column: 1 / 2;
        grid-row: 3 / 4;
    }
    .layout--card--bot-right{
        grid-column: 1 / 2;
        grid-row: 4 / 5;
    }

    /* Scale up the title font size to make it visible in mobile view */
    .layout--card h4{
        font-size: 5vw;
    }

    /* Scale up the size to make it fits into mobile view */
    .layout--content .layout--content--grid-container{
        height: 75vh;
        width: 85vw;
    }

    /* Align the cancel button to the top right corner of the content background */
    .layout--content--grid-container .button--cancel{
        top: 1vw;
        right: 1vw;
    }
}

/* -Shared Styling End- */

/**********************************************/
/* Top Navigation Bar */

/* Define the size of the top navigation bar (Left) and make it to stick to the top of the screen */
#top-nav{
    background-color: #fffef6;

    z-index: 9;
    position: fixed;
    top: 0;

    width: 100%;
    height: 5vh;
    min-height: 48px;

    border-bottom: 4px solid #FFA600;
    justify-content: flex-start;
}

/* The left nav bar will take 60% of the space and align its item to the left */
#top-nav--page{
    width: 60%;
    height: 100%;

    justify-content: flex-start;
    align-items: center;
}
/* Seperate each of the button with padding instead of margin, to allow the hover effect to animate the whole interaction area */
#top-nav--page a{
    flex: 1;
    height: 100%;
    padding: 0 1em;

    font-family: "main", cursive, "Comic Sans MS", sans-serif;
    color: #FFA600;
    font-weight: bold;
}

/* Remove the corner radius of the home button and make it to take up the entire width given */
#top-nav--page .nav--reset{
    flex: 1;
    background-image: url(images/xi_redPacket.jpg);
    background-size: cover;
    background-position-y: 65%;
}

/* Define the area for tools icon like toggle fullscreen, align the tools icon to the right */
#top-nav--full-screen{
    flex: 1;
    height: 100%;
    padding: 0.2em;

    justify-content: flex-end;
}

/* Set the size of the icon as square */
#top-nav--full-screen a{
    background-size: cover;

    aspect-ratio: 1 / 1;
    height: 100%;
    margin: 0.5em;
}

/* Set the background image as full screen icon, controlled by main.js */
#full-screen{
    background-image: url(images/icon_fullscreen.png);
}

/* Set the background image as exit full screen icon, controlled by main.js */
#exit-full-screen{
    background-image: url(images/icon_exitfullscreen.png);
}

/* Define the position for hamburger icon, align it the left edhe of the top nav bar */
#mobile--top-nav--page{
    aspect-ratio: 1 / 1;
    height: 100%;
    padding: 0.2em;
}

/* Align the 3 lines in hamburger icon to the left sna space them equally */
#mobile--top-nav--hamburger{
    justify-content: space-around;
    align-items: flex-start;
}

/* Define the width for each line in a hamburger icon */
#hamburger--top-line{
    width: 100%;
}
/* Define the width for each line in a hamburger icon */
#hamburger--mid-line{
    width: 70%;
}
/* Define the width for each line in a hamburger icon */
#hamburger--bot-line{
    width: 40%;
}

/* Style the line in hamburger icon */
.hamburger--line{
    background-color: #FFA600;

    height: 20%;
    margin: 0;
    padding: 0;

    border-radius: 0.5em;
    transition: width 0.5s;
}

/* Block the entire screen, to register for click event when the user click on the screen */
#mobile--top-nav--menu{
    position: absolute;
    left: 0;

    z-index: 10;

    background-color: #00000050;
    width: 100%;
    height: 100vh;

    overflow-x: visible;

    transition: transform 0.2s;
    transform: scale(0);
}

/* Align the menu outside of the screen, tansit it back by its width when hamburger icon is on */
#top-nav--menu--background{
    position: absolute;

    background-color: #ffffff;
    width: 40vw;
    height: 40vh;
    padding-left: 0.5em;

    border-radius: 0 0 0.5em 0;
    border-right: 4px solid #FFA600;
    border-bottom: 4px solid #FFA600;

    transition: left 0.2s 0.2s;
    left: -42vw; /* Slightly bigger than actual width to ensure it is hidden fully */
}

/* Align the content to the left edge */
#mobile--top-nav--menu--list{
    align-items: flex-start;
}

/* Allow the flex items to take up the whole space */
#mobile--top-nav--menu--list li{
    flex: 1;
    list-style-type: circle;

    color: #FFA600;
    font-family: "main", cursive, "Comic Sans MS", sans-serif;
    font-size: 3.5vw;
    font-weight: bold;

    transition: opacity 0.2s 0.4s;
    opacity: 0;
}
/* Change the text color to highlight - color gold, to follow the color use in desktop */
#mobile--top-nav--menu li a{
    color: #FFA600;
}

/* -Top Navigation Bar End- */


/**********************************
/* Landing */

/* Set the backgrund image of landing page to the red background
   And Act as flex container to align its item to the center 
*/
#landing {
    height: 100vh;
    width: 100%;

    justify-content: center;
    align-items: center;
}

/* Landscape white background inside the #landing
   Ac as a grid container to align its items
*/
#landing--grid-container {
    background-color: #fffef6;

    height: 60%;
    width: 80%;
    border-radius: 0.5em;
    margin-bottom: 5vh;

    display: grid;
    grid-template-columns: repeat(5, 20%);
    grid-template-rows: repeat(5, 20%);
}

/* Decoration image for the landing page, 
   Cover the vertical middle part of the white area 
   and extend out of the white background
*/
#landing--deco-image {
    grid-column: 4 / 6;
    grid-row: 2 / 5;

    margin: 0;
    padding: 0 15% 0 0;
}

/* Apply round corner to the deco image */
#landing--deco-image img {
    border-radius: 2%;
}

/* Layout for sub-title of landing page */
#landing--title--sub {
    grid-column: 1 / 4;
    grid-row: 2 / 3;

    margin-left: 10%;

    /* Text Styling */
    /* Align the text to the bottom vertically */
    font-size: 5vw;
    font-weight: bold;

    display: flex;
    align-items: end;
}

/* Layout for main-title of landing page */
#landing--title--main {
    grid-column: 1 / 4;
    grid-row: 3 / 4;

    margin-left: 15%;

    /* Text Styling */
    /* Align the text to the bottom vertically and extend to overlap with the image */
    font-family: "main", cursive, "Comic Sans MS", sans-serif;
    color: #e00c41;
    font-size: 5vw;
    font-weight: bold;

    display: flex;
    align-items: end;
}

/* Ensure the button to have the same size */
.landing--button {
    width: 30vw;
}

@media (max-width: 800px){
    /*
        Align item to the center vertically to fits in the button in he new layout 
    */
    #landing {
        height: 80vh;
        padding: 5%;
        justify-content: space-evenly;
    }

    /* 
        Resize the background to maintain its aspect ratio in mobile view
    */
    #landing--grid-container {
        height: 40%;
        width: 100%;
    }

    #landing nav{
        flex-direction: column;
    }

    /* Scale up the button to make it longer */
    .landing--button {
        width: 70vw;
        margin: 2em;
    }
}
/* -Landing End- */


/*************************/
/* Costume */

/* Apply background color: Main and cover the entire screen */
#costume {
    background-color: #fffef6;

    height: 100vh;
    width: 100%;
    border-bottom: 4px solid #e00c41;

    position: relative;
    /* To allow the section title with position--absolute to stays relative to this section space */
}

/* Allow the flex container attached to nav to:
    Extend its height to 100% to take up the entire height, so as to align the items to the screen center
    Align its flex item to the edge by using space-between
*/
#costume nav {
    height: 100%;
    justify-content: space-between;
}

/* Flex item, to cover the full parent height to align the item to the center by using flex */
#costume nav a {
    height: 100%;
    width: 33%;
    border-radius: 0.5em;

    display: flex;
    align-items: center;

}

/* Styling for costume section title
    Align text to top left
    Text color will be less saturated to blend into the background
    Title font styling
*/
#costume--title {
    font-family: "main", cursive, "Comic Sans MS", sans-serif;
    font-size: 5vw;
    font-weight: bold;
    color: #e00c4183;
    text-align: left;

    padding: 0;
    margin: 0;

    position: absolute;
    top: 2vh;

    pointer-events: none; /* Prevent the text from blocking the hovering event of other element */
}

@media(max-width: 800px){
    /* Redcue the heihgt to fit two sub section nagivators in 100vh */
    #costume {
        height: 50vh;
    }
}
/* - Costume End - */


/**************************/
/* Symbolism */

/* Apply background color: Main and cover the entire screen */
#symbolism {
    background-color: #fffef6;

    height: 100vh;
    width: 100%;
    border-bottom: 4px solid #e00c41;
    position: relative;
    /* To allow the section title with position--absolute to stays relative to this section space */
}

/* Allow the flex container attached to nav to:
    Extend its height to 100% to take up the entire height, so as to align the items to the screen center
    Align its flex item to the edge by using space-between
*/
#symbolism nav {
    height: 100%;
    justify-content: space-between;
}

/* Flex item, to cover the full parent height to align the item to the center by using flex */
#symbolism nav a {
    height: 100%;
    width: 33%;

    border-radius: 0.5em;
}

/* Styling for symbolism section title
    Align text to top right
    Text color will be less saturated to blend into the background
    Title font styling
*/
#symbolism--title {
    font-family: "main", cursive, "Comic Sans MS", sans-serif;
    font-size: 5vw;
    font-weight: bold;
    color: #e00c4183;
    text-align: right;

    padding: 0;
    margin: 0;

    position: absolute;
    top: 2vh;
    right: 0;

    pointer-events: none; /* Prevent the text from blocking the hovering event of other element */
}

@media(max-width: 800px){
    /* Redcue the heihgt to fit two sub section nagivators in 100vh */
    #symbolism {
        height: 50vh;
    }
}

/*****************************/
/* Main Superstition */

/* Add in gap between the previous content and current */
#m-superstition--form{
    margin-top: 5vh;
}

/* Add highlight color - gold border to the top of each option description */
.m-superstition--option{
    width: 100%;

    padding: 0.5em;
    border-top: 2px solid #FFA600;
}
/* Align item vertically center */
.m-superstition--option div{
    justify-content: flex-start;
}

/* Add in 0.5em left margin between the check box and option description */
.m-superstition--option--description{
    width: 100%;

    padding: 0.2em;
    margin-left: 0.5em;
    border-radius: 0.2em;
}
/* Align the arrow icon to the right edge of the option */
.m-superstition--option--expand--sign{
    font-weight: bold;
    margin-left: 1em;
    display: inline-block; /* Allow it to rotate by changing inline to inline-block*/
    
    transition: transform 0.5s;
}
/* Rotate the expand sign to rotate and point downward */
.m-superstition--option--expand .m-superstition--option--expand--sign{
    transform: rotate(90deg);
}

/* Option details container, default state is set to hidden (height = 0) */
.m-superstition--option--detail{
    overflow: hidden;
    color: black;
    
    height: 0;
    padding: 0;
    border: 0px solid #FFA600;
    border-radius: 0.5em;
    margin-top: 1em;
    
    transition: height 0.2s, /* heihgt is controled by main.js */
                padding 0.2s,
                border 0.2s;
}
/* Remove the margin-top for the header in option detail */
.m-superstition--option--detail h4{
    margin-top: 0;
}

/* Styling for form external link, to add in 0.5em margin-top */
#m-superstition--form nav{
    margin-top: 0.5em;
}

/* Extend to take 40% of parents width */
#m-superstition--form--submit-button{
    width: 40%;
}

/* Align the text content to the center */
#m-superstition--form--result{
    text-align: center;
}
/* Scale up the score font-size to 12vw */
#m-superstition--form--result h2{
    font-size: 8em;
}

/* Clicked Effect */
/* Transition for drop down, transit the border and padding */
.m-superstition--option--expand .m-superstition--option--detail{
    padding: 0.5em;
    border: 2px solid #FFA600;
}

/* -Main Superstition End- */


/*******************************/
/* Main Ritual */

/* Set the position to relative, to allow the child to overlap with other child */
#m-ritual--interaction{
    position: relative;
}
/* Remove the top, left and right margin and keep bottom margin as 0.5em to connect to the cover at the top without any gap */
#m-ritual--interaction figure{
    margin: 0 0 0.5em 0;

    overflow-x: hidden;
}
/* Align the 2 looping images in the same line, and hide the overflowed content */
#m-ritual--interaction figure #m-ritual--interaction--loop-background{
    width: 200%;
    display: flex;
    flex-wrap: nowrap;
    position: relative;
}
/* Size the image to make them cover the full parent's width */
#m-ritual--interaction figure #m-ritual--interaction--loop-background img{
    flex: 1;
    height: auto;

    border-radius: 0;
}

/* Make the arrow rounded */
.m-ritual--interaction--button--circle{
    width: 2em;
    height: 2em;

    border-radius: 50%;
}

/* Male circle button rounded with highlight color - gold */
.m-ritual--interaction--button--hollow{
    background-color: #fffef6;

    padding: 0.5em;
    border: 2px solid #FFA600;
    margin: 0 0.5vw;
}
/* Class for clicked button, to change the background color to focus color - red */
.m-ritual--interaction--button--hollow--clicked{
    background-color: #e00c41;
}

/* Align the parents to be slightly more above the buttons (height = 2em) and figcaption (height = 0.5em), and align the children content to the center */
#m-ritual--interaction--character--parent{
    position: absolute;
    bottom: 0;
    left: -25%;

    justify-content: center;
}
/* Define the character parent's size as 10vw * 10vw */
#m-ritual--interaction--character--parent figure{
    position: relative;

    width: 10vw;
    height: 10vw;

    overflow: hidden;
}
/* Align the character heead and body img to overlap with each other */
#m-ritual--interaction--character--parent figure img{
    position: absolute;
    bottom: 0;
}

/* Align the drop down to the top edge of the looping background */
#m-ritual--interaction--top-drop-down{
    position: absolute;
    top: 7em;

    align-items: flex-start;
    z-index: 1;

    transition: top 0.5s;
}
/* Remove margin-top of the page header */
#m-ritual--interaction--top-drop-down h2{
    border: 0;
    font-size: 3em;
}

/* Align cotent button to the top right corner of the looping background */
#m-ritual--interaction--content-button{
    position: absolute;
    right: 1em;

    /* Make the button circle */
    width: 2em;
    height: 2em;

    border-radius: 50%;
}


@media (max-width: 800px){
    /* Change the layout of the page buttons, to place the 7 page button in one line,
       and the 2 next page button at the second line */
    #m-ritual--interaction nav{
        display: grid;
        grid-template-columns: repeat(7, 14%);
        grid-template-rows: repeat(2, 1fr);

        justify-items: center;
    }

    /* Place the page navigator at the first row */
    #m-ritual--interaction--button--hollow--container{
        grid-column: 1 / 8;
        grid-row: 1 / 2;

        justify-content: space-evenly;
    }

    /* Allow to scale under the minimum interaction size but can't exceed the minimum interaction size (48px) */
    #m-ritual--interaction--button--hollow--container button{
        flex: 1;
        aspect-ratio: 1 / 1;

        min-width: unset;
        min-height: unset;
        max-width: 48px;
        max-height: 48px;
    }

    /* Place the Previous page button at the start of the second row */
    #m-ritual--interaction--button--previous-page{
        grid-column: 1 / 2;
        grid-row: 2 / 3;
    }

    /* Place the Next page button at the end of the second row */
    #m-ritual--interaction--button--next-page{
        grid-column: 7 / 8;
        grid-row: 2 / 3;
    }

    /* Scale up the font size of the icon in the the following:
        1. Page info button
        2. Previous page button
        3. Next page button
    */
    /* Make the arrow rounded */
    .m-ritual--interaction--button--circle{
        font-size: 2em;
    }
    #m-ritual--interaction--content-button{
        font-size: 2em;
        right: 0.5em;
    }

    /* Align the title to the left and smaller the font size, to ensure thats enough space to fit the title and button in one line */
    #m-ritual--interaction--top-drop-down h2{
        font-size: 4vw;
        text-align: left;

        width: 100%;
        padding-left: 0.5em;
    }
}

/* -Main Ritual End- */


/*************************/
/* Footer */

/* Set the footer height to cover the content height add a padding of 2em and allow the flex container to align the children content to the top */
#footer{
    height: fit-content;
    padding: 2em;
    border-top: 4px solid #FFA600;

    align-items: flex-start;
}

/* Styling for child under footer, to take up 100% parent height */
.footer--child{
    width: 100%;
    height: 100%;

    max-height: 100%;
    padding: 1em 4em;
}
/* Remove the margin-top for the header and reduce the font size to 2em - gold for the child under footer */
.footer--child h2{
    font-size: 3vw;
    margin-top: 0;
}

/* Specify transition duration as 0.5s for the following:
    border-radius
    width (control by main.js)
    background-color
*/
#footer--form div{
    position: relative;
    transition: border-radius 0.5s,
                width 0.5s,
                background-color 0.5s;
}

/* Rounds the border into a circle */
.footer--form--submitted{
    border-radius: 50%;
    background-color: #FFA600;
}
/* After submitting the form, hide and disable all the child element */
.footer--form--submitted .footer--form--child{
    opacity: 0;
    pointer-events: none;
}

/* Hide the content for submitted form before the form is submitted, transition is played after the form submittion transition is finished */
#footer--form--submitted--content{
    position: absolute;
    font-size: 20vw;
    color: #fffef6;

    pointer-events: none; /* Prevent it from blocking the interaction with form children */

    opacity: 0;
    transition: opacity 0.5s 0.5s;
}
/* Show the content */
.footer--form--submitted #footer--form--submitted--content{
    opacity: 100%;
}

/* Allow the children under footer to take up the whole space given and change border to 2px with highlight color - gold */
.footer--form--child{
    min-height: 5vh;
    width: 100%;
    border: 2px solid #FFA600;
    margin-bottom: 2em;

    font-size: 1em;

    transition: opacity 0.5s;
}

/* Make the warning message to align to the left, and set the opacity to 0 to hide the warning */
#footer--form--warning{
    width: 100%;
    border: 0px none #00000000; /* Remove the border given by fotter--form--child */
    margin: 0;

    text-align: left;
    font-size: 0.8em;
    font-weight: bold;
    color: #e00c41;

    opacity: 0;
}
/* Class to toggle the blink animation in main.js */
.footer--form--warning--blink{
    animation: footer--form--warning--blink 3.0s forwards;
}
/* Keyframes for footer--form--warning, to blink the text twice by controlling the opacity value between 0 and 100 */
@keyframes footer--form--warning--blink{
    0%{
        opacity: 0;
    }
    33%{
        opacity: 100%;
    }
    66%{
        opacity: 0;
    }
    100%{
        opacity: 100%;
    }
}

/* Styling for qrcode in footer, to add a left border as division line between the 2 sectioncs in footer */
#footer--qrcode{
    margin-left: 0;
    border-left: 4px solid #FFA600;
}
/* Ensure the qrcode image is maintaining its acpect ratio of 1 to 1 (square) */
#footer--qrcode img{
    width: 50%;
    height: auto;
}

@media (max-width:800px){

    /* Scale up the button text font to cover up the button area */
    #footer--form--button--submit{
        font-size: 3vw;
    }

    /* Scale up the child elements to avoid them from over-sizing in mobile view where height is larger */
    .footer--form--child{
        min-height: 2vh;
    }
}
/* -Footer End- */


/*******************************/
/* Game */

/* Allow the game section to cover the entire screen width and remove margin */
#game{
    width: 100%;

    padding: 0vh 5vw;
    border-top: 4px solid #FFA600;
    margin: 0%;
}
/* Remove margin-top of the header in game, to align the game section with the previous section without gap */
#game h2{
    margin-top: 0;
}

/* Force the height of the inline instruction to fits the sprite size after resizing (60px) */
.game--instruction--inline{
    height: 60px;
}

/* Resize the inline sprite in the instruction to make it fits into the line */
.game--instruction--inline-sprite{
    transform: scale(0.5) translate(0, -90px);
}

/* Grid Container for game interaction area, outlined with highlight color - gold */
#game--grid-container{
    width: 100%;
    height: 60vh;
    border: 4px solid #FFA600;
    border-radius: 0.5em;

    display: grid;
    grid-template-rows: repeat(4, 25%);
    grid-template-columns: 100%;

    overflow: hidden;
    position: relative;
}

/* Background for ingredients area */
#game--ingredient{
    grid-row: 3 / 5;
    grid-column: 1 / 2;

    width: 100%;
    height: 100%;
    background-color: #ffd381;
}

/* 
    Grid container for ingredients, all items are aligned to center
    Resizing will be apply to the grid container from main.js, to resize only the ingredeints while keeping the backgrfound size    
*/
#game--ingredient--grid-container{
    width: 100%;
    height: 100%;
    position: relative;
    
    display: grid;
    grid-template-columns: repeat(6, 120px);
    grid-template-rows: 120px;

    /* Align the entire grid boxes to the center */
    justify-content: center;
    align-content: center;

    /* Align the content in each grid box to the center */
    justify-items: center;
    align-items: center;
}

/* List of ingredients, render their image from spritesheet */

/* Angbao take the first column */
#game--ingredient--angbao{
    grid-column: 1 / 2;
    grid-row: 1 / 2;

    background-position: -120px -120px;
}

/* Cup take the second column */
#game--ingredient--cup{
    grid-column: 2 / 3;
    grid-row: 1 / 2;

    background-position: -240px -120px;
}

/* Cup take the fourth column */
#game--ingredient--tea{
    grid-column: 5 / 6;
    grid-row: 1 / 2;

    background-position: -240px -240px;
}

/* Money take the fifth column */
#game--ingredient--money{
    grid-column: 6 / 7;
    grid-row: 1 / 2;

    background-position: -240px 0px;
}

/* List of products */

/* Product angbao */
#game--product--angbao--open{
    background-position: -120px -120px;
}
#game--product--angbao--close{
    background-position: 0px -120px;
}

/* Product tea */
#game--product--tea--empty{
    background-position: 0px -240px;
}
#game--product--tea--fill{
    background-position: -120px -240px;
}

/*Empty product, change display to none to avoid showing anything */
#game--product--none{
    display: none;
}

/* Allow the ingredients to take up the entire space given */
.game--ingredient--sprite{
    width: 100%;
    height: 100%;

    background: url("images/game_spritesheet.png");
}

/* Allow the product to take only the sprite size, as product will takes two columns. Without limiting the size, it will render 2 sprites together */
.game--product--sprite{
    width: 120px;
    height: 120px;

    grid-column: 3 / 5;
    grid-row: 1 / 2;

    background: url("images/game_spritesheet.png");

    position: absolute;
    z-index: 1;
}

/* Add a border to the box, and fill its child div with color to act as a progress bar */
#game--timer{
    height: 5vh;
    border: 4px solid #FFA600;
    padding: 0;
    margin: 1em 0em;

    overflow: hidden;
}

/* Fill the progress bar with green color */
#game--timer div{
    width: 100%;
    height: 100%;
    margin: 0;

    background-color: rgb(0, 255, 0);
}

/* Start timer count down from 60 secs when .start is added to #game--timer */
#game--timer.start div{
    animation: count-down 60s linear;
}

/* Allow the flex container to align items to the bottom and hide the overflow content */
#game--customer{
    grid-row: 1 / 3;
    grid-column: 1 / 2;
    width: 100%;
    background-color: #f6f6f4;

    align-items: flex-end;
    position: relative;
    overflow-x: hidden;
}

/* Align the back costumer to outside the parent container to hide it */
#game--customer--back{
    right: -120px;
}

/* Set the size of the customer sprite to 120px * 120px */
.game--customer--sprite{
    width: 120px;
    height: 120px;

    background-image: url(images/game_spritesheet.png);
    position: absolute;
}

/* Sprite for customer - young */
.game--customer--young{
    background-position: 0 0;
}

/* Sprite for customer - old */
.game--customer--old{
    background-position: -120px 0;
}

/* Cover the game interaction area with a half-transparent overlay to act as the menu background */
#game--menu{
    grid-row: 1 / 5;
    grid-column: 1 / 2;

    width: 100%;
    height: 100%;
    background-color: #00000050;

    z-index: 1;
    transition: opacity 0.5s;
}

/* Extend the button to improve aesthetic */
#game--button--start{
    width: 20%;
}

/* Call for counce effect on the ga,e ,emu title */
#game--menu h2{
    animation: bounce 4.0s linear infinite;
}

/* Allow the score to take the align to the top center of the parent contaier. */
#game--score{
    grid-column: 1 / 2;
    width: 100%;

    pointer-events: none; /* Avoid blocking the interaction area */
    position: absolute;
    top: 0;

    justify-content: flex-start;
}

/* Defines the area for waning message to display and fade out */
#game--warning-message--container{
    grid-row: 2 / 3;
    grid-column: 1 / 2;

    position: relative;
    width: 100%;
    height: 100%;
}
/* Styling for warning message, will be initialize to the bottom with 100 opacity, 
   Then transit to the top with 0 opacity in 1.0s, controlled by main.js */
.game--warning-message{
    position: absolute;
    bottom: 0;
    color: #e00c41;
    font-weight: bold;

    transition: opacity 1.0s,
                bottom 1.0s;
}

/* Animate the content scale between 0.9 to 1.1, to create a bouncing effect */
@keyframes bounce{
    0%{
        transform: scale(0.9);
    }
    50%{
        transform: scale(1.1);
    }
    100%{
        transform: scale(0.9);
    }
}

/* Allow the timer to start counting down, reduce the width and change color from green to red as it goes */
@keyframes count-down{
    0%{
        max-width: 100%;
        background-color: rgb(0, 255, 0);
    }
    50%{
        /* Ensure the color don't turn into brown (rgb(125, 125, 0)) that effect the look */
        background-color: rgb(255, 255, 0);
    }
    100%{
        max-width: 0%;
        background-color: rgb(255, 0, 0);
    }
}

@media (max-width:800px){

    /* Instruction layout for mobile view */

    /* Use grid to hold the instruction text and inline sprite */
    .game--instruction--inline{
        display: grid;
        grid-template-columns: repeat(10, 10%);
        grid-template-rows: 60px;
    }

    /* Icon take the last 4 columns */
    .game--instruction--inline .game--instruction--inline-sprite{
        position: relative;
        grid-column: 7 / 11;
        grid-row: 1 / 2;
    }

    /* Instruction text take the first 6 columns */
    .game--instruction--inline span{
        grid-column: 1 / 7;
        grid-row: 1 / 2;
    }

    /* Offset to apply, to align the object to under the top edge of the grid */
    .game--instruction--inline-sprite{
        transform: scale(0.5) translate(0, -60px);
    }


    /* Update the layout to mobile view, display the 4 ingrdients at the 4 corner, and prodcut in the middle */

    /* Grid container for the new layout */
    #game--ingredient--grid-container{
        grid-template-columns: repeat(4, 120px);
        grid-template-rows: repeat(3, 120px);
    }

    /* Angbao take the top-left box */
    #game--ingredient--angbao{
        grid-column: 1 / 2;
        grid-row: 1 / 2;
    }

    /* Cup take the bottom-left box */
    #game--ingredient--cup{
        grid-column: 1 / 2;
        grid-row: 3 / 4;
    }

    /* Cup take the top-right box */
    #game--ingredient--tea{
        grid-column: 4 / 5;
        grid-row: 1 / 2;
    }

    /* Money take the bottom-right box */
    #game--ingredient--money{
        grid-column: 4 / 5;
        grid-row: 3 / 4;
    }

    /* Product will the the middle column */
    .game--product--sprite{
        grid-column: 2 / 4;
        grid-row: 2 / 3;
    }

    /* Scale up the score for readability */
    #game--score h3{
        font-size: 10vw;
    }
}